//Buttons

.button{
  
  // Default style
  display: inline-block;
  position: relative;

  //Align base
  text-align: center;
  white-space: nowrap;
  
  background-color: $Primary;
  border: 1px solid $Primary;
  color: $White;
  cursor: default;
  margin: 0 4px 4px 0;
  font-weight: 400;
  @include transition(200, #{"default"});
  @include button-size($padding-y, $padding-x, $font-size-base, $border-radius);
  
    //Disable button
  &.disabled, &:disabled{
   cursor: not-allowed;
   color: $White !important;
   @include bkg-degrade($Primary, 'disabled');
    span{
      color: $White !important;
      ::after, ::before {
        display: none;
      }
      :hover{
      }
    }
  }

  &:active{
    transform: scale(0.8);
    box-shadow: none !important;
  }  

  &:not(:active){
    transform: scale(1);
  } 
  
  &:hover{
    color: $Primary;
    span{
      color: $Primary;
    }
  }

  span{
    color: $White;
  }

  // Outline default

  &.outline{
    background-color: transparent;
    border: 1px solid $Primary;
    color: $Primary; 
    
    span{
      color: $Primary; 
    }
    
    &:hover{
      background-color: $Primary;
      color: $White;
      span{
        color: $White; 
      }
    }
  }

  
  //
  // Style colors buttons
  //

  @each $themeName, $value in $theme-colors {
    &.#{$themeName} {
      
      &.modern-fx{
        span{

          &::after{
            box-shadow: 0 0 0px 20px rgba($value, .1);
          }

          &::before{
            box-shadow: 0 0 0px 30px rgba($value, .06);
          }
        }
      }
      
      border: 1px solid $value;
      @include bkg-degrade($value);
      
      span{
        color: $White;
      }

      //Disable button
      &.disabled, &:disabled{
       @include bkg-degrade($value, 'disabled');
        color: $White;
      }
    
      &:hover{
        background-color: $White;
        background-image: unset;
        span{
          color: $value;
        }
      }

      @if $themeName == 'link'{
        &:hover span{
          text-decoration: underline;
        }
        span, &:hover span {
          color: $font-color-base;
        }
      }

      @else if $themeName == 'dark'{
        &:hover span{
          color: $Dark;
        }
        span {
          color: $White;
        }
      }
    }
    
    &.outline-#{$themeName} {
    
    @if $themeName != 'link' {
      border: 1px solid $value;   
      background-color: transparent;
      background-image: unset;
      
      span{
        color: $value;
      }

      //Disable button
      &.disabled, &:disabled{
       @include bkg-degrade($value, 'disabled');
        color: $White;
      }
    
      &:hover{
        background-color: $value;
        span{
          color: $White;
        }
      }
     }
    } // End outline
    
    &.dark-#{$themeName} {
    
    @if $themeName != 'link' {
      border: 1px solid $value;   
      background-color: $Dark;
      @include bkg-degrade($Dark);
      
      span{
        color: $value;
      }

      //Disable button
      &.disabled, &:disabled{
       @include bkg-degrade($Dark);
        color: $White;
      }
    
      &:hover{
        background-color: $value;
        background-image: unset;
        span{
          color: $White;
        }
      }
     }
    } // End outline
    
  }

&.modern-fx{

  &:not(:active):hover{
    span::after{
        width: 80%;
        height: 80%;
        transform: translate(-50%, -50%) scale(1);
        animation: fxhover-after 2s infinite .5s;
        opacity: 1;
        }     

    span::before{
        width: 80%;
        height: 80%;
        transform: translate(-50%, -50%) scale(1);
        animation: fxhover-before 2s infinite .8s;
        opacity: 1;
      } 
    }  
  
    &:hover{
      &::after{
        opacity: 1;
      }
    }
  
    &::after{
      content: ' ';
      width: 100%;
      height: 100%;
      position: absolute;
      z-index: -1;
      top: 0;
      left: 0;
      border-radius: $border-radius;;
      background-color: $White;
      opacity: 0;
    }
    span{
      z-index:2;

      &::after{
        content: ' ';
        width: 0%;
        height: 0%;
        transform: translate(-50%, -50%) scale(1);
        position: absolute;
        top: 50%;
        left: 50%;
        border-radius: $border-radius;
        box-shadow: 0 0 0px 20px rgba($Primary, .1);
        transition: width, height;
        transition-duration: .5s, .5s;
        z-index: -1;
        opacity: 0;
        
      }

      &::before{
        content: ' ';
        width: 0%;
        height: 0%;
        transform: translate(-50%, -50%) scale(1);
        position: absolute;
        top: 50%;
        left: 50%;
        border-radius: $border-radius;
        box-shadow: 0 0 0px 30px rgba($Primary, .04);
        transition: width, height;
        transition-duration: .5s, .5s;
        z-index: -1;
        opacity: 0;
        
      }
  }
}

  // Circular buttons
  &.circle{
    border-radius: 100%;
    height: 90px;
    width: 90px;
    padding: $padding-y 0;
    
    &.modern-fx {
      
      &::after{
        border-radius: $border-radius-circle;
      }
      
      span{
        &::after {
          border-radius: $border-radius-circle;
        }
        
        &::before {
          border-radius: $border-radius-circle;
        }
      }
    } // End modern-fx
    
  } // End Circle

  // Size Buttons

  &.small{
    font-size: $font-size-sm;
    padding: $padding-sm-y $padding-sm-x;
    
    span{
      font-size: $font-size-sm;
    }
  }

  &.large{
    font-size: $font-size-lg;
    padding: $padding-lg-y $padding-lg-x;
    span{
        font-size: $font-size-lg;
    }
  }

}

// Button groups

@each $bpName in map-keys($global-breakpoints) {
 @include media-breakpoint-min($bpName) {
    
    $checkName: bpHelper($bpName, 'check', '-');
   
   .button-group#{$checkName}{
      display: -webkit-inline-box;
      display: -webkit-inline-flex;
      display: -ms-inline-flexbox;
      display: inline-flex;
      .button{
        margin: 0 -1px 4px 0;
      }
      .button:not(:first-child):not(:last-child){
        border-radius: 0;
      }

      .button:first-child:not(:last-child){
        border-top-right-radius: 0;
        border-bottom-right-radius: 0;
      }
      .button:last-child:not(:first-child){
        border-top-left-radius: 0;
        border-bottom-left-radius: 0;
      }
    }   

    .button-group-vertical#{$checkName}{
      display: -webkit-inline-box;
      display: -webkit-inline-flex;
      display: -ms-inline-flexbox;
      display: inline-flex;
      -webkit-box-orient: vertical;
      -webkit-box-direction: normal;
      -webkit-flex-direction: column;
      -ms-flex-direction: column;
      flex-direction: column;
      -webkit-box-align: start;
      -webkit-align-items: flex-start;
      -ms-flex-align: start;
      align-items: flex-start;
      -webkit-box-pack: center;
      -webkit-justify-content: center;
      -ms-flex-pack: center;
      justify-content: center;

      .button{
        margin: 0 0 -1px 0;
        width: 100%;
        display: block;    
      }
      .button:not(:first-child):not(:last-child){
        border-radius: 0;
      }

      .button:first-child:not(:last-child){
        border-bottom-right-radius: 0;
        border-bottom-left-radius: 0;
      }
      .button:last-child:not(:first-child){
        border-top-right-radius: 0;
        border-top-left-radius: 0;
      }
    }  

    .button-group-circle#{$checkName}{
      display: -webkit-inline-box;
      display: -webkit-inline-flex;
      display: -ms-inline-flexbox;
      display: inline-flex;

      &.vertical{
      display: -webkit-inline-box;
      display: -webkit-inline-flex;
      display: -ms-inline-flexbox;
      display: inline-flex;
      -webkit-box-orient: vertical;
      -webkit-box-direction: normal;
      -webkit-flex-direction: column;
      -ms-flex-direction: column;
      flex-direction: column;
      -webkit-box-align: start;
      -webkit-align-items: flex-start;
      -ms-flex-align: start;
      align-items: flex-start;
      -webkit-box-pack: center;
      -webkit-justify-content: center;
      -ms-flex-pack: center;
      justify-content: center;
      }
   }
  }//End each Global breackpoints
}