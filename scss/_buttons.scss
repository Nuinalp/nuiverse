//Buttons

//Style base
.button{
  //Default base
  display: inline-block;
  position: relative;

  //Align base
  text-align: center;
  white-space: nowrap;
  vertical-align: middle;
  
  //Remove user select
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  overflow: hidden;
  background-color: $Default;
  border: 1px solid $Default;
  color: white;
  cursor: default;
  margin: 0 4px 4px 0;
  font-weight: 400;
    
  @include button-size($padding-y, $padding-x, $font-size-base, $border-radius);
  @include transition(200, #{"default"});
  @extend %default; //Include the default size font.
  @extend .shadow;
  
  &::before{
    @extend %fx-content;
  }

  &.obj-br-n::after{
    border-radius: 0 !important;
  }

  &:hover{
    background: $Selected !important;
    color: $font-color-base;
    box-shadow: $shadowHover;
  }

  //Disable button
  &.disabled, &:disabled{
   cursor: not-allowed;
  }

  span{
    z-index: 2;
    position: relative;
    cursor: unset;
  }
  
  &:active{
    transform: scale(0.8);
    box-shadow: none !important;
  }  

  &:not(:active){
    transform: scale(1);
  } 

  &.circle{
    border-radius: 100%;
    height: 90px;
    width: 90px;
    padding: $padding-y 0;
  }

  &.outline{
  background-color: $White;
  border: 1px solid $Default;
  color: $Default;  
  }

  &.block{
    display: block;
    width: 100%;
  }
  
  //
  // Style colors buttons
  //

  @each $themeName, $value in $theme-colors {
  
    &._3d-#{$themeName} {
      @include bkg-degrade($value, '3d');
      border:1px solid $value;
      //Disable button
      &.disabled, &:disabled{
       @include bkg-degrade($value, '3d-disabled');
        color: $White;
      }
    }

    &.flat-#{$themeName} {
      @include bkg-degrade($value, 'flat');
      border:1px solid $value;
      //Disable button
      &.disabled, &:disabled{
       @include bkg-degrade($value, 'flat-disabled');
        color: $White;
      }
    }
  
    &.#{$themeName} {
      border:1px solid $value;
      @include bkg-degrade($value);

      //Disable button
      &.disabled, &:disabled{
       @include bkg-degrade($value, 'disabled');
        color: $White;
      }

      &:after{
        @include fx-btn-click($value, #{'circle'});
      }

      &:not(:active):hover::after{
        @include transition(200, #{"fx-btn-hover"});
      }

      &:active:hover::after{
        @include transition(200, #{"click-btn"});
      }   

      &:hover{
        
        color: $value;
        
        &:after{
          @include transition(200, #{"fx-btn-hover"});
        }
      }

      @if $themeName == 'link'{
        &:hover span{
          text-decoration: underline;
        }
        span {
          color: $font-color-base;
        }
      }

      @else if $themeName == 'dark'{
        &:hover span{
          color: $Dark;
        }
        span {
          color: $White;
        }
      }
    }

  &.dark-#{$themeName}{
    
    border:1px solid $value;
    background-color: lighten($Dark, 5%);
    color: $value;
  }

  &.outline-#{$themeName}{
    
    border:1px solid $value;
    @include bkg-degrade(#fff);
    color: $value;
    
    &::before{
     background-color: rgba(0, 0, 0, 0.02); 
    }
    
    &:after{
      @include fx-btn-click($value, #{'circle'});
    }
    
    &:not(:active):hover::after{
      @include transition(200, #{"fx-btn-hover"});
    }
  
    &:active:hover::after{
      @include transition(200, #{"click-btn"});
    }   

    &:hover:after{
      @include transition(200, #{"fx-btn-hover"});
    }

      span{
        color:$value;
      }
    
    @if $themeName == 'link'{
      &:hover span{
        text-decoration: underline;
      }
      span {
        color: $font-color-base;
      }
    }
    @else if $themeName == 'dark'{
      &:hover span{
        color: $Dark;
      }
      span {
        color: $Dark;
        }
      }
    }
  }
}

.button-group{
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  .button{
    margin: 0 -1px 4px 0;
  }
  .button:not(:first-child):not(:last-child){
    @extend .obj-br-n;
  }
  
  .button:first-child:not(:last-child){
    border-top-right-radius: 0;
    border-bottom-right-radius: 0;
  }
  .button:last-child:not(:first-child){
    border-top-left-radius: 0;
    border-bottom-left-radius: 0;
  }
}

.button-group-vertical{
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-align: start;
  -webkit-align-items: flex-start;
  -ms-flex-align: start;
  align-items: flex-start;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  
  .button{
    margin: 0 0 -1px 0;
    width: 100%;
    display: block;    
  }
  .button:not(:first-child):not(:last-child){
    @extend .obj-br-n;
  }
  
  .button:first-child:not(:last-child){
    border-bottom-right-radius: 0;
    border-bottom-left-radius: 0;
  }
  .button:last-child:not(:first-child){
    border-top-right-radius: 0;
    border-top-left-radius: 0;
  }
}

.button-group-circle{
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  
  &.vertical{
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-align: start;
  -webkit-align-items: flex-start;
  -ms-flex-align: start;
  align-items: flex-start;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  }
}

.buttons-nosd .button{
  @extend %no-box-shadown;
}

.buttons-lg .button{
  @extend %size-lg;
}

.buttons-sm .button{
  @extend %size-sm;
}
